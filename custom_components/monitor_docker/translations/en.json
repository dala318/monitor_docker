{
    "services": {
        "reload": {
            "description": "Reloads all monitor_docker entities.",
            "name": "Reload"
        },
        "restart": {
            "description": "Restart a container, the container must be configured in monitor_docker.",
            "fields": {
                "name": {
                    "description": "Name of the container.",
                    "name": "Name"
                },
                "server": {
                    "description": "Name of the server, as given in config. Only required if you have more than one docker host config.",
                    "name": "Server"
                }
            },
            "name": "Restart"
        }
    },
    "config": {
        "step": {
            "user": {
                "description": "Setup a connection to docker host",
                "data": {
                    "name": "Name of Docker daemon",
                    "url": "Host URL of Docker daemon",
                    "scan_interval": "Update interval (seconds)",
                    "certpath": "If a TCP socket is used, you can define your Docker certificate path, forcing Monitor Docker to enable TLS. The filenames must be cert.pem and key.pem",
                    "retry": "Retry interval (seconds)"
                }
            },
            "reconfigure": {
                "description": "Reconfigure settings of Docker daemon",
                "menu_options": {
                    "containers": "Containers to monitor",
                    "conditions": "Conditions to monitor"
                }
            },
            "containers": {
                "description": "Select which containers to monitor",
                "data": {
                    "containers": "Array of containers to monitor (keep empty to add all, and new)",
                    "containers_exclude": "Array of containers to be excluded from monitoring, when all containers are included"
                }
            },
            "containers_rename": {
                "description": "Select a display name for each container",
                "data": {
                    "rename_entity": "If rename is done, it changes also the entity name"
                }
            },
            "conditions": {
                "description": "Setup a connection to docker host",
                "data": {
                    "monitored_docker_conditions": "Conditions of the controller to be monitored",
                    "monitored_container_conditions": "Conditions of each container to be monitored",
                    "switchenabled": "Enable/Disable the switch entity for containers",
                    "buttonenabled": "Enable/Disable the button entity for containers",
                    "memorychange": "Change of memory usage before alerting",
                    "precision_cpu": "Precision of CPU usage percentage",
                    "precision_memory_mb": "Precision of memory usage in MB",
                    "precision_memory_percentage": "Precision of memory usage in percentage",
                    "precision_network_kb": "Precision of network bandwidth in kB",
                    "precision_network_mb": "Precision of network usage in MB"
                }
            }
        },
        "error": {
            "name_exists": "Name already exists",
            "invalid_connection": "Could not connect to Docker"
        },
        "abort": {
            "reauth_successful": "Reauthorization successful",
            "reconfigure_successful": "Reconfiguration successful"
        }
    },
    "issues": {
        "remove_configuration_yaml": {
            "description": "Remove your settings for {domain} {integration_title} from configuration.yaml as they are now managed via the ConfigFlow UI.",
            "title": "Manually configured {integration_title} deprecated"
        }
    }
}
